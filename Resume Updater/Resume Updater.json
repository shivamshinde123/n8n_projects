{
  "name": "Resume Updater",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=You have access to:\n- My **Master Resume (Shivam Shinde)**, which you need to get using get google docs tool.\n- A specific **Job Description** (provided via form input).\n- Role Title: {{ $json.body.Role }}\n- Job Description:{{ $json.body.Job_description }}\n- Company:{{ $json.body.Company_name }}\n\nYou must use **only** the content from my Master Resume and the job description. Do **not fabricate** or add information that isn't present in the resume.\n\n---\n\nüîç **TASK 1: Extract Important Keywords**  \nExtract the **10‚Äì15 most important keywords or phrases** from the job description. Include:\n- Technical skills\n- Tools and platforms\n- Responsibilities\n- Soft skills or behavioral traits\n\n---\n\nüéØ **TASK 2: Extract Required Skills**  \nCategorize the required skills from the job description:\n1. Technical Skills  \n2. Business/Functional Skills  \n3. Soft Skills  \n4. Industry-Specific Knowledge\n\n---\n\nüìÅ **TASK 3: Match My Projects**  \nFind the **top 3 most relevant projects** from the resume that align with the job. For each, provide:\n- Project Title  \n- Reason for alignment (reference JD keywords or skills)\n\n---\n\n‚úçÔ∏è **TASK 4: Tailor Resume Bullet Points with Metrics**  \nStep 1: Identify top 3 responsibilities from the job description  \nStep 2: Tailor up to 7 bullet points from resume (especially matched projects), to reflect these responsibilities.  \n\nGuidelines:\n- Each bullet must include measurable **metrics** (from the resume only)  \n- Reword only if the underlying content exists  \n- Integrate relevant keywords naturally  \n- Avoid long or complex clauses  \n- Keep each bullet clear, impactful, and metric-driven\n\nOutput in a 2-column format:  \n**Original** | **Updated** (with bold changes)\n\n---\n\nüõ†Ô∏è **TASK 5: Update Skills Section**  \nRevise the resume's **Skills section**:  \n- Keep only JD-relevant skills  \n- Add new skills from JD only if present in resume  \n- Remove unrelated ones  \nOutput a **clean, categorized, bulleted list**\n\n---\n**TASK 6: Write a Tailored Cover Letter**\nStep 1: Identify the **biggest day-to-day challenge** in this role and its **root cause**, based on the job description\nStep 2: Write a **100-word attention-grabbing hook** that shows how my background makes me equipped to solve that challenge\nStep 3: Write the **rest of the cover letter** (max 250 words), using:\n\n* My extracted resume from google docs\n* The job description\n* Relevant keywords from Task 1\n* Concrete, resume-based examples\n\n**Writing rules for cover letter**:\n\n* Do **not** use double dashes (‚Äî); use commas or semicolons if needed\n* Avoid phrases like ‚ÄúI am excited to...\", ‚ÄúWith a strong foundation in...\", ‚ÄúThis role resonates with me...‚Äù\n* Don‚Äôt format sentences as ‚Äúword and its description‚Äù (e.g., ‚ÄúX ‚Äî where I did Y‚Äù)\n* Use direct, confident language without fluff or generic enthusiasm\n* Keep structure lean: clear hook, focused body, concise close\n* **Incorporate relevant keywords from Task 1 naturally into the letter to demonstrate alignment with the job description**\n* Include one paragraph at the end talking about my extracurricular activities.\n* Do not create generic last paragraph\n---",
        "options": {
          "systemMessage": "=You are an expert resume writer and career coach with 20+ years of experience helping job seekers land top roles in {{ $json.body.Industry }} industry."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -64,
        -224
      ],
      "id": "0cc7902e-ae68-47c7-8f35-1187bbe309f5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -112,
        0
      ],
      "id": "ea327796-7a0c-4ba3-bb11-66edd398af1c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "yfBZ7JJfrMmpcnge",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "{{ $json.sessionID}}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        64,
        0
      ],
      "id": "111daacc-2a90-499f-83e7-5c626b138ff4",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "matched_projects",
              "description": "The top 3 most relevant projects selected from the resume.",
              "required": true
            },
            {
              "name": "updated_bullet_points",
              "description": "The updated bullet points from the AI response, including a 2-column table.",
              "required": true
            },
            {
              "name": "updated_skill_section",
              "description": "The updated, filtered skill section in bulleted format.",
              "required": true
            },
            {
              "name": "cover_letter",
              "description": "The cover letter generated for this job posting.",
              "required": true
            },
            {
              "name": "important_keywords",
              "description": "These are the important keywords present in the job description.",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        288,
        -224
      ],
      "id": "aab027dd-a5ba-4022-b6ee-b0f543179c73",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        384,
        0
      ],
      "id": "67eb64fd-b5db-4017-b161-39b0f78e05f7",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "yfBZ7JJfrMmpcnge",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "1UIUItbj-vku_jloEWqwDJgVqFoQdukqcdAN4qEiBYtw"
      },
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        224,
        0
      ],
      "id": "068758f7-44c4-4c55-aef3-fea7b8068b5b",
      "name": "Get a document in Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "hpzlh9r7x1lMvbwn",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "10043b4e-b551-49c7-9abf-e669fc29bcf6",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -416,
        -224
      ],
      "id": "d0657c18-4f72-4aed-83f8-3d43762c775c",
      "name": "Webhook",
      "webhookId": "10043b4e-b551-49c7-9abf-e669fc29bcf6"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify({\n  matched_projects: $json.output.matched_projects,\n  updated_bullet_points: $json.output.updated_bullet_points,\n  updated_skill_section: $json.output.updated_skill_section,\ncover_letter: $json.output.cover_letter,\nimportant_keywords: $json.output.important_keywords\n}) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        768,
        -224
      ],
      "id": "9bfaa271-6437-4f8a-8298-bbaa32b8263b",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "content": "## Getting the inputs from Streamlit Form",
        "height": 480,
        "width": 336,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -528,
        -320
      ],
      "typeVersion": 1,
      "id": "4dceb13c-0b9d-41ec-82f1-19c34244d412",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Analyzing the Resume and the Job Description",
        "height": 480,
        "width": 800,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -320
      ],
      "typeVersion": 1,
      "id": "82ce097c-a2bf-44ac-8e42-1a8bb3ccddf4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Sending back the Analysis to Streamlit UI",
        "height": 480,
        "width": 352,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        656,
        -320
      ],
      "typeVersion": 1,
      "id": "1dc85a70-406c-4d88-be0f-ca970efbf2f0",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get a document in Google Docs": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0f3898cb-9907-497e-817b-e4dd29e7d9ca",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "52e5473b2279c5b1a5f9d080c7d0c47d20d3d92f52e5b7c6a17196d1f16e7b2c"
  },
  "id": "dUARNaiDAqnah5Zs",
  "tags": []
}